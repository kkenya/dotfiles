# environment
# 環境変数の指定
# set-environment (alias: setenv
# 環境変数にはglobal environmentとsession environmentがあり、サーバが開始されると環境変数をglobal envrionmentへコピーする
# sessionはそれぞれsession environmentを持ち、session envrironmentとglobal environmentが統合される。両方に同じ変数が存在した場合にsession environmentが利用される
#if-shell true {
#}

# 設定ファイル
SOURCE_FILE="$HOME/.tmux.conf"
# paneリサイズ時の幅
RESIZE_PANE_SIZE=10

# color theme
BLACK="#232834" #191E2A
BLACK_LIGHT="#686868"
RED="#ED8274"
RED_LIGHT="#F28779"
GREEN="#A6CC70"
GREEN_LIGHT="#BAE67E"
YELLOW="#FAD07B"
YELLOW_LIGHT="#FFD580"
BLUE="#6DCBFA"
BLUE_LIGHT="#73D0FF"
MAGENTA="#CFBAFA"
MAGENTA_LIGHT="#D4BFFF"
CYAN="#90E1C6"
CYAN_LIGHT="#95E6CB"
WHITE="#C7C7C7"
WHITE_LIGHT="#FFFFFF"

# window
WINDOW_FG_CLOUR=$WHITE
WINDOW_BG_CLOUR=$BLACK_LIGHT
CURRENT_WINDOW_FG_CLOUR=$WHITE
CURRENT_WINDOW_BG_CLOUR=$BLACK
# status line
STATUS_FG_CLOUR=$BLACK
STATUS_BG_CLOUR=$BLACK
WINDOW_STATUS_FG_CLOUR=$WHITE
WINDOW_STATUS_BG_CLOUR=$BLACK
CURRENT_WINDOW_STATUS_FG_CLOUR=$YELLOW
CURRENT_WINDOW_STATUS_BG_CLOUR=$BLACK
STATUS_RIGHT_FG_CLOUR=$BLACK
STATUS_RIGHT_BG_CLOUR=$MAGENTA
STATUS_LEFT_FG_CLOUR=$BLACK
STATUS_LEFT_BG_CLOUR=$GREEN
# pane
PANE_BORDER_FG_COLOUR=$YELLOW
PANE_BORDER_BG_COLOUR=$BLACK
PANE_ACTIVE_BORDER_FG_COLOUR=$YELLOW
PANE_ACTIVE_BORDER_BG_COLOUR=$BLACK
# message
MESSAGE_COMMAND_FG_COLOUR=$BLACK
MESSAGE_COMMAND_BG_COLOUR=$CYAN
MESSAGE_FG_COLOUR=$BLACK
MESSAGE_BG_COLOUR=$GREEN
# mode
MODE_FG_COLOUR=$BLACK
MODE_BG_COLOUR=$GREEN

# options
# オプションの指定
# set-option (alias: set
#   -p: paneオプションの指定
#   -w: windowオプションの指定
#   -s: serverオプションの指定
#   他指定はsessionオプションとなる
#   オプションがuserオプションでなければ、tmuxはオプション名からオプションを推測するため-wまたは-sオプションを指定する必要はなく、paneオプションの-wと仮定する
#   -gオプションが指定された場合、sessionかwindowオプションが設定される

## STYLES
# 色指定
#   black, red, green, yellow, blue, magenta, cyan, $FG_COLOUR
#   利用できる場合 bright variants brightred, brightgreen, brightyellow
#   to colour255 from the 256-colour set; default for the default colour; terminal for the terminal default colour; or a h0xadecimal rgb string such as ‘#ffffff’.
#   256-colourが設定されていた場合(tmux -2で256色を強制するなど) color0からcolour255
#   defaultを指定した場合はtmuxのデフォルト色
#   terminalを指定した場合はターミナルのデフォルト色
#   16桁のRGB指定
# フォント指定 acs(the terminal alternate character set)に指定できる値
#   bright (or bold), dim, underscore, blink, reverse, hidden, italics, overline, strikethrough, double-underscore, curly-underscore, dotted-underscore, dashed-underscore

# デフォルトのprefixのキーバインドを解除
unbind-key ^b
# prefixを指定'None'の場合は指定なし
set-option -g prefix ^j
# prefix2のみを指定した場合、unbind-keyでデフォルトの^bを解除できない
#set-option -g prefix2 ^j
# escape入力時に、関数かメタキーの一部か判定する待機する時間(ms)
set-option -g escape-time 0 # The default is 500 milliseconds.
# bind-key -r で設定したキーバインドはprefixを押さずに再度入力できる
set-option -g repeat-time 250 # default 500
# キーが押されるまでステータスラインのメッセージを表示する
set-option -g display-time 0
# 履歴の保存行数
set-option -g history-limit 10000

## session

# マウス操作とイベントを有効にする
set-option -g mouse on
# copy modeでのキー操作をvi風に変更
set-option -g mode-keys vi

## status line

# statusの有効化とサイズ指定(on|off|2|3|4|5)
set-option -g status on
# status lineを上に表示
set-option -g status-position bottom # (top|bottom)
# status lineの更新間隔を指定(s)。0を指定した場合は再描画の間隔を無効にする
set-option -g status-interval 1 # default 15
# status line全体のstyle設定
set-option -g status-style fg=$STATUS_FG_CLOUR,bg=$STATUS_BG_CLOUR
# 単一のwindowのstyle指定
set-option -g window-status-style fg=$WINDOW_STATUS_FG_CLOUR,bg=$WINDOW_STATUS_BG_CLOUR
# window一覧のformatを指定
set-option -g window-status-format " #W [#I] "
#set-option -g window-status-format ' #I.#W:#{b:pane_current_path} '
# 選択中のwindowのstyle指定
set-option -g window-status-current-style fg=$CURRENT_WINDOW_STATUS_FG_CLOUR,bg=$CURRENT_WINDOW_STATUS_BG_CLOUR
# 選択中のwindowのformat指定
set-option -g window-status-current-format " #W [#I] "
# 左端にsessionを表示
set-option -g status-left " session [#S] "
# 左端のstyle指定
set-option -g status-left-style fg=$STATUS_LEFT_FG_CLOUR,bg=$STATUS_LEFT_BG_CLOUR
# 左端最大長を指定
set-option -g status-left-length 20 # default 10
# 右端に現在時刻を表k
set-option -g status-right " %Y-%m-%d %H:%M:%S "
# 右端のstyle指定
set-option -g status-right-style fg=$STATUS_RIGHT_FG_CLOUR,bg=$STATUS_RIGHT_BG_CLOUR
# 右端最大長を指定
set-option -g status-right-length 40 # default 40
set-option -g window-status-separator "|" # default single space

## window

## 選択中windowのstyleを変更する
set-option -g window-style fg=$WINDOW_FG_CLOUR,bg=$WINDOW_BG_CLOUR
set-option -g window-active-style fg=$CURRENT_WINDOW_FG_CLOUR,bg=$CURRENT_WINDOW_BG_CLOUR
# windowのindexを1から始める
set-option -g base-index 1
# sessionを終了した時、windowのindexを連番で振り直す
set-option -g renumber-windows on # [on|off]
# paneのindexを1から始める
set-option -g pane-base-index 1

## pane

# paneのstatusを表示しない
set-option -g pane-border-status top # (off|top| bottom)
# paneのボーダーstyleを指定
set-option -g pane-border-style fg=$PANE_BORDER_FG_COLOUR,bg=$PANE_BORDER_BG_COLOUR
# ボーダーに表示するテキストを指定
set-option -g pane-border-format " #P #{pane_current_command} "
# 選択中paneのボーダーstyleを指定
set-option -g pane-active-border-style fg=$PANE_ACTIVE_BORDER_FG_COLOUR,bg=$PANE_ACTIVE_BORDER_BG_COLOUR
# statusの区切り文字を指定

## message
set-option -g message-command-style fg=$MESSAGE_COMMAND_FG_COLOUR,bg=$MESSAGE_COMMAND_BG_COLOUR
# メッセージ表示のスタイル指定
set-option -g message-style fg=$MESSAGE_FG_COLOUR,bg=$MESSAGE_BG_COLOUR

## mode
# window選択画面のスタイルを指定
set-option -g mode-style fg=$MODE_FG_COLOUR,bg=$MODE_BG_COLOUR

# bind-key [-nr] [-N note] [-T key-table] key command [arguments] (alias: bind
#   -nオプション: -T rootのエイリアスでprefixの入力なしにkey commandを呼び出す
#   -rオプション: リピートするキーに指定。間隔はrepeat-timeで指定
# send-keys [-FHlMRX] [-N repeat-count] [-t target-pane] key ... (alias: send
#   -Mオプション: mouseイベントに受け渡す(mouseサポートを有効にしている場合)
#   -Xオプション: copy modeにコマンドを送信する
# unbind-key [-anq] [-T key-table] key (alias: unbind

# option v でcopy-modeを開始
bind-key -n M-v copy-mode
bind-key -T copy-mode-vi v send-keys -X begin-selection
# Enter, y, マウスドラッグでtmuxのbufferとclipboardにコピー
# cope-pipe-and-cancelの場合カーソルが入力まで戻されるため利用しない
bind-key -T copy-mode-vi y send-keys -X copy-pipe "pbcopy"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "pbcopy"
# copy-modeをescapeで終了
bind-key -T copy-mode Escape send-keys -X cancel
# copy modeでない場合もマウスで選択した範囲をクリップボードにコピーする
bind-key MouseDragEnd1Pane send-keys -X cope-pipe-and-cancel "pbcopy"

# option [1-9]で数字に対応したwindowを選択
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9
## paneの選択切り替えをprefix [hljk]で行う
bind-key -N 'Select the pane to the left of the active pane' -r h select-pane -L
bind-key -N 'Select the pane below the active pane' -r j select-pane -R 
bind-key -N 'Select the pane above the active pane' -r k select-pane -D
bind-key -N 'Select the pane to the right of the active pane' -r l select-pane -U
# prefixなしでpaneを切り替え
bind-key -N 'Select next pane' -n ^o select-pane -t :.+
# paneのリサイズをprefix Ctrl+[hljk]で行う
bind-key -r ^h resize-pane -L $RESIZE_PANE_SIZE
bind-key -r ^j resize-pane -D $RESIZE_PANE_SIZE
bind-key -r ^k resize-pane -U $RESIZE_PANE_SIZE
bind-key -r ^l resize-pane -R $RESIZE_PANE_SIZE
# キーバインドを?で表示する
bind-key ? list-keys
# command-promptでShift+rで設定を読み込めるように
bind-key r source-file $SOURCE_FILE \;\
    display-message "reload source-file #{SOURCE_FILE}"

